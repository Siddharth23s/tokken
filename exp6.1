const express = require('express');
const app = express();

app.use((req, res, next) => {
  const time = new Date().toISOString();
  console.log(`[${time}] ${req.method} ${req.originalUrl}`);
  next();
});

const authMiddleware = (req, res, next) => {
  const authHeader = req.headers['authorization'];
  if (!authHeader) return res.status(401).json({ message: 'Missing Authorization header' });
  const token = authHeader.split(' ')[1];
  if (token !== 'mysecrettoken') return res.status(403).json({ message: 'Invalid or missing Bearer token' });
  next();
};

app.get('/', (req, res) => {
  res.send('Public Route: No authentication required');
});

app.get('/protected', authMiddleware, (req, res) => {
  res.send('Protected Route: Access granted with valid Bearer token');
});

const PORT = process.env.PORT || 5000;
app.listen(PORT, () => console.log(`Server running on port ${PORT}`));
