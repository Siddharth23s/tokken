const express = require('express');
const mongoose = require('mongoose');
const app = express();
app.use(express.json());

mongoose.connect('mongodb://127.0.0.1:27017/bank', { useNewUrlParser: true, useUnifiedTopology: true });

const accountSchema = new mongoose.Schema({
  name: String,
  balance: Number
});

const Account = mongoose.model('Account', accountSchema);

app.post('/transfer', async (req, res) => {
  const { from, to, amount } = req.body;
  if (amount <= 0) return res.status(400).json({ message: 'Invalid amount' });

  const sender = await Account.findOne({ name: from });
  const receiver = await Account.findOne({ name: to });

  if (!sender || !receiver) return res.status(404).json({ message: 'One or both accounts not found' });
  if (sender.balance < amount) return res.status(400).json({ message: 'Insufficient balance' });

  sender.balance -= amount;
  receiver.balance += amount;

  await sender.save();
  await receiver.save();

  res.json({ message: 'Transfer successful', senderBalance: sender.balance, receiverBalance: receiver.balance });
});

app.post('/create', async (req, res) => {
  const { name, balance } = req.body;
  const existing = await Account.findOne({ name });
  if (existing) return res.status(400).json({ message: 'Account already exists' });
  const account = new Account({ name, balance });
  await account.save();
  res.json({ message: 'Account created', account });
});

app.get('/accounts', async (req, res) => {
  const accounts = await Account.find();
  res.json(accounts);
});

const PORT = process.env.PORT || 5000;
app.listen(PORT, () => console.log(`Server running on port ${PORT}`));
